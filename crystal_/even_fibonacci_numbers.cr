# Each new term in the Fibonacci sequence is generated by assing the previous
#   two terms. By starting with 1 and 2, the first 10 terms will be:
#   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#   By considering the terms in the Fibonacci sequence whose values do not
#   exceed four million, find the sum of the even-valued terms.

def even_fibonacci_sum
  n = 1
  fibonaccis = [] of Int32
  while fibonacci(n) < 4000000
    number = fibonacci(n)
    fibonaccis << number if number % 2 == 0
    n += 1
  end
  fibonaccis.reduce(0) { |init, num| init + num }
end

def fibonacci(n : Number)
  if n == 1
    1
  elsif n == 2
    2
  else
    fibonacci(n - 1) + fibonacci(n - 2)
  end
end

def fibonacci(n : Nil)
  puts "Nil is an invalid argument for this method"
end

puts even_fibonacci_sum
puts fibonacci(nil)
